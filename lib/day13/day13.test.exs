defmodule Day13.Test do
  use ExUnit.Case

  alias Day13, as: Subject

  test "sum_of_rows" do
    boards = [
      ".........
    #########
    #########
    #....#..#
    ..##..###
    #####.##.
    #####.##.
    ..##..###
    #....#..#
    #########
    #########
    .........",
      "#.##..##.
    ..#.##.#.
    ##......#
    ##......#
    ..#.##.#.
    ..##..##.
    #.#.##.#.",
      "#...##..#
    #....#..#
    ..##..###
    #####.##.
    #####.##.
    ..##..###
    #....#..#"
    ]

    assert 10 == Subject.sum_of_rows(boards)
  end

  test "sum_of_columns" do
    data = [
      ".##.##..##.##.
    .##.#.##.#.##.
    .###......###.
    .###......###.
    .##.#.##.#.##.
    .##.##..##.##.
    .##.#.##.#.##.",
      "#...##..#
    #....#..#
    ..##..###
    #####.##.
    #####.##.
    ..##..###
    #....#..#",
      "#.##..##.
    ..#.##.#.
    ##......#
    ##......#
    ..#.##.#.
    ..##..##.
    #.#.##.#."
    ]

    assert 12 == Subject.sum_of_columns(data)
  end

  test "mirrored_rows" do
    assert {:ok, 4} == Subject.mirrored_rows(horizontal())
    assert :not_found == Subject.mirrored_rows(vertical())

    weird_vertical =
      "
      .........
      #########
      #########
      #....#..#
      ..##..###
      #####.##.
      #####.##.
      ..##..###
      #....#..#
      #########
      #########
      .........
      "

    assert {:ok, 6} == Subject.mirrored_rows(weird_vertical)
  end

  test "are_equal?" do
    assert Subject.are_equal?(
             ["#....#..#", "..##..###", "#####.##."],
             ["#....#..#", "..##..###", "#####.##."]
           )

    assert Subject.are_equal?(
             ["#....#..#", "..##..###", "#####.##."],
             ["#....#..#", "..##..###", "#####.##.", "#...##..#"]
           )

    refute Subject.are_equal?(
             ["#....#..#", "..##..###", "#####.##."],
             ["#....#..#", "..##..###", "#...##..#"]
           )
  end

  defp vertical do
    "#.##..##.
    ..#.##.#.
    ##......#
    ##......#
    ..#.##.#.
    ..##..##.
    #.#.##.#."
  end

  defp horizontal do
    "#...##..#
   #....#..#
   ..##..###
   #####.##.
   #####.##.
   ..##..###
   #....#..#"
  end
end
